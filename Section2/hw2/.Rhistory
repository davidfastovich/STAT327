print(groceries)
total = 0
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ((budget-total)/total))
total = total + (n * (groceries$price[i]))
}
}
}
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 10)
ceiling(.1)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
}
}
}
grocery.list("groceries.csv", 10)
test <- data.frame(c("1", "2"),)
test <- data.frame(price = c(1, 2, 3), item = c("spinach", "test", "test"))
test
test[4,] <- c(2)
test[4,] <- 2
test[4,] <- c(2, "rice")
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
}
}
return(total)
}
grocery.list("groceries.csv", 10)
?rbend
?rbind()
to.buy = data.frame(item = character(), price = numeric(), quantity = numeric())
a <- c(test, 1, 2)
to.buy <- rbind(to.buy, a)
a <- c("test", 1, 2)
to.buy <- rbind(to.buy, a)
View(to.buy)
to.buy <- rbind(to.buy, a)
to.buy <- rbind(to.buy, a)
groceries$item[1]
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric())
colnames(shopping.list) = c("item", "price", "quantity")
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
to.buy <- c(groceries$item[i], groceries$price[i], n)
shopping.list = rbind(shopping.list, to.buy)
}
}
return(shopping.list)
}
grocery.list("groceries.cvs", 10)
grocery.list("groceries.csv", 10)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric())
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
to.buy <- c(groceries$item[i], groceries$price[i], n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list)
}
grocery.list("groceries.csv", 10)
sshopping.list = data.frame(item = character(), price = numeric(), quantity = numeric())
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric())
to.buy <- c(groceries$item[1], groceries$price[1], 1)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = data.frame(item = character(), price = integer(), quantity = integer())
to.buy <- c(groceries$item[1], groceries$price[1], 1)
shopping.list = data.frame(item = character(), price = integer(), quantity = integer())
to.buy <- c(groceries$item[1], groceries$price[1], 1)
shopping.list = data.frame(item = character(), price = integer(), quantity = integer())
shopping.list = rbind(shopping.list, to.buy)
View(shopping.list)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = rbind(shopping.list, to.buy)
to.buy <- c(groceries$item[2], groceries$price[2], 2)
shopping.list = rbind(shopping.list, to.buy)
groceries
groceries$item[2]
groceries$price[2]
as.character(groceries$price[2])
as.character(groceries$item[2])
to.buy <- c(as.character(groceries$item[2]), groceries$price[2], 2)
shopping.list = rbind(shopping.list, to.buy)
str(shopping.list)
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric(), stringsAsFactors = FALSE)
str(shopping.list)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric(), stringsAsFactors = FALSE)
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
to.buy <- c(groceries$item[i], groceries$price[i], n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list)
}
grocery.list("groceries.csv", 10)
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric(), stringsAsFactors = FALSE)
to.buy <- c(groceries$item[1], groceries$price[1], 1)
shopping.list <- rbind(shopping.list, to.buy)
to.buy <- c(groceries$item[2], groceries$price[2], 2)
shopping.list <- rbind(shopping.list, to.buy)
str(shopping.list)
shopping.list = data.frame(item = character(), price = numeric(), quantity = numeric(), stringsAsFactors = FALSE)
to.buy <- c(as.character(groceries$item[1]), as.numeric(groceries$price[1]), 2)
shopping.list <- rbind(shopping.list, to.buy)
str(shopping.list)
character()
str(to.buy)
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
str(shopping.list)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
to.buy <- c(groceries$item[i], groceries$price[i], n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list)
}
grocery.list("groceries.csv", 10)
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
to.buy <- c(groceries$item[i], groceries$price[i], n)
to.buy <- c(groceries$item[1], groceries$price[1], 1)
str(to.buy)
s = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
str(s)
t <- c(groceries$item[1], groceries$price[1], 1)
s <- rbind(s, t)
t <- c(groceries$item[2], groceries$price[2], 2)
str(t)
s <- rbind(s, t)
str(s)
t <- c(as.character(groceries$item[2]), as.character(groceries$price[2]), as.character(2))
s <- rbind(s, t)
stringasfactor(s)
t = "test"
t + "test"
a <- spinach
a <- "spinach"
b <-  1
c <- 2
a <- rbind(a, b)
a <- rbind(a, d)
a <- rbind(a, c)
str(a)
View(a)
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
lapply(a, class)
t <- data.frame(a = "one", b = 1, c = 1)
str(t)
shopping.list
s <- rbind(shopping.list, t)
str(s)
t <- data.frame(a = "two", b = 2, c = 3)
s <- rbind(shopping.list, t)
View(s)
t <- data.frame(a = "one", b = 1, c = 1)
s <- rbind(s, t)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = ceiling((budget-total)/total))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list)
}
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 50)
grocery.list("groceries.csv", 50)
grocery.list("groceries.csv", 10)
library(palinsol)
?la04
?Insol
?Insol
?astrosol
astro(-2678, solution = la04)
insol(ORB, long = (-83.6175*(pi/2)), lat = (51.435*(=65*pi/180)))
insol(ORB,(-83.6175*(pi/2)),(51.435*(=65*pi/180)))
insol(ORB,(-83.6175*(pi/2)),(51.435*(65*pi/180)))
Insol(ORB,(-83.6175*(pi/2)),(51.435*(65*pi/180)))
Insol(ORB,(83.6175*(pi/2)),(51.435*(65*pi/180)))
Insol(ORB,(227*(pi/2)),(51.435*(65*pi/180)))
astro(2678, solution = la04)
Insol(ORB,(227*(pi/2)),(51.435*(65*pi/180)))
Insol(ORB,(227*(pi/2)),(51.435*(65*(pi/180))))
Insol(ORB,(-83*(pi/2)),(51.435*(65*(pi/180))))
?insol
?Insol
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list)
}
grocery.list("groceries.csv", 10)
5*.4
2+2+5
2+2+6
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 10)
(2*.4) + (2.4*2) + 4
s
s[,-1]
s[-2,]
?apply
?any
?apply
View(shopping.list)
r(list = ls())
rm(list = ls())
how.many <- function(item, n.max){
q <- cat(sep = "",  "How many ", item, "?")
n <- as.numeric(readline(q))
while(n > n.max) {
cat(sep = "", "ERROR: too many for the budget", "\n")
q <- cat(sep = "",  "How many ", item, "?")
n <- as.numeric(readline(q))
}
return(n)
}
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
shopping.list = shopping.list[-1,]
return(shopping.list[])
}
View(grocery.list)
test <- grocery.list("groceries.csv", 10)
View(test)
str(test)
test[any(x == 0)]
test[function(x) any(x == 0), ]
test!(apply(x, 1, function(y) any(y == 0))), ]
test[!(apply(x, 1, function(y) any(y == 0))), ]
test[!(apply(test, 1, function(y) any(y == 0))), ]
test1 <- apply(test, function(y) all(y == ))
test1 <- apply(test, function(y) all(y == 0))
test1 <- apply(test, 1, function(y) all(y == 0))
test1
test1 <- apply(test, 1, function(y) any(y != 0))
test1
test[test1, ]
test1 <- apply(test, 1, function(row) any(row != 0))
test1
str(test)
test[test1, ]
dd = data.frame(a = 1:4, b= 1:0, c=0:3)
##Go through each row and determine if a value is zero
row_sub = apply(dd, 1, function(row) all(row !=0 ))
##Subset as usual
dd[row_sub,]
test1 <- apply(test, 1, function(row) all(row != 0))
test1
test[test1, ]
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character(), stringsAsFactors = FALSE)
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
shopping.list = shopping.list[-1,]
return(shopping.list[!apply(shopping.list, 1, function(y) any(y == 0)), ])
}
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 10)
groceries <- read.table("groceries.csv", stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
groceries$item[1]
floor((10-0)/0)
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 10)
n = how.many(groceries$item[1], n.max = floor((10-0)/groceries$price[1]))
n
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character())
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
shopping.list = shopping.list[-1,]
return(shopping.list[!apply(shopping.list, 1, function(y) any(y == 0)), ])
}
grocery.list("groceries.csv", 10)
to.buy <- data.frame(a = groceries$item[1], b = groceries$price[1], c = 5)
shopping.list = rbind(shopping.list, to.buy)
shopping.list = data.frame(item = character(), price = character(), quantity = character())
to.buy <- data.frame(a = groceries$item[1], b = groceries$price[1], c = 5)
shopping.list = rbind(shopping.list, to.buy)
shopping.list
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character())
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
shopping.list = shopping.list[-1,]
return(shopping.list)
}
grocery.list("groceries.csv", 10)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
names(groceries)[1] <- "item"
names(groceries)[2] <- "price"
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character())
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list[!apply(shopping.list, 1, function(y) any(y == 0)), ])
}
grocery.list("groceries.csv", 10)
grocery.list("groceries.csv", 10)
grocery.list <- function(file, budget) {
groceries <- read.table(file, stringsAsFactors = FALSE, sep = ",")
colnames(groceries) = c("item", "price")
print(groceries)
total = 0
shopping.list = data.frame(item = character(), price = character(), quantity = character())
for(i in seq_len(length(groceries$item))) {
if(groceries$price[i] < (budget-total)) {
n = how.many(groceries$item[i], n.max = floor((budget-total)/groceries$price[i]))
total = total + (n * (groceries$price[i]))
to.buy <- data.frame(a = groceries$item[i], b = groceries$price[i], c = n)
shopping.list = rbind(shopping.list, to.buy)
}
}
colnames(shopping.list) = c("item", "price", "quantity")
return(shopping.list[!apply(shopping.list, 1, function(y) any(y == 0)), ])
}
grocery.list("groceries.csv", 10)
(n) <- grocery.list("groceries.csv", 10)
n <- grocery.list("groceries.csv", 10)
print(n)
sum(n$price*n$quantity)
cat(sep = "", "Your bill is ", sum(n$price*n$quantity))
cat(sep = "", "Your bill is $", sum(n$price*n$quantity))
rm(list = ls())
source("hw2grocery.R")
source("hw2grocery.R")
source("hw2grocery.R")
source("hw2grocery.R")
rm(list = ls())
source("hw2grocery.R")
source("test.R")
# Importing Dataset
larch <- read.table("larch.txt", header = TRUE)
par(mfrow = c(1, 3))
larch.rs1 <- regsubsets(y ~ x1 + x2 + x3 + x4, data = larch, nbest = 1)
setwd("~/Git/STAT572/Homework6")
library(leaps)
library(car)
library(MASS)
par(mfrow = c(1, 3))
larch.rs1 <- regsubsets(y ~ x1 + x2 + x3 + x4, data = larch, nbest = 1)
plot(larch.rs1, scale = "bic")
plot(larch.rs1, scale = "r2")
plot(larch.rs1, scale = "adjr2")
larch.fit <- lm(y ~ x1 + x2 + x3 + x4, data = larch)
larch.null <- lm(y ~ 1, data = larch)
step(larch.null, scope = list(lower = larch.null, upper = larch.fit), direction = "both")
step(larch.fit, direction = "both")
step(larch.fit, scope = lists(lower = larch.null, upper = larch.fit) direction = "forward")
larch.fit <- lm(y ~ x1 + x2 + x3 + x4, data = larch)
larch.null <- lm(y ~ 1, data = larch)
step(larch.null, scope = list(lower = larch.null, upper = larch.fit), direction = "both")
step(larch.fit, direction = "both")
step(larch.fit, scope = lists(lower = larch.null, upper = larch.fit), direction = "forward")
larch.fit <- lm(y ~ x1 + x2 + x3 + x4, data = larch)
larch.null <- lm(y ~ 1, data = larch)
step(larch.null, scope = list(lower = larch.null, upper = larch.fit), direction = "both")
step(larch.fit, direction = "both")
step(larch.fit, scope = list(lower = larch.null, upper = larch.fit), direction = "forward")
step(larch.fit, direction = "backward")
boxcox(time ~ forage + grain + weight, data = trans)
