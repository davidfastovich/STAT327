resid(fit)
resid.2 <- resid(fit)
plot(x = resid.2, y = art.data$y)
plot(x = resid.2, art.data$x)
?layout
>plot
?plot
plot(fit, which = 1)
plot(x = resid.2, art.data$x, ylab = "X values")
plot(x = resid.2, y = art.data$y, ylab = "Y values", xlab = "Residuals")
details(fit)
art.data.2 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y - c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
art.data.2 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
fit.2 <- lm(y~x, data = art.data.2)
anova(fit.2)
a.fit.2 <- anova(fit.2)
summary(a.fit.2)
plot(art.data.2)
View(art.data.2)
fit.3 <- lm(y~x, data = art.data.2)
resid.3 <- resid(fit.3)
plot(fit.3, which = 1)
plot(fit.3, which = 2)
?levene.test
?leveneTest
plot(fit.3, which = 3)
plot(fit.3, which = 4)
plot(fit.3, which = 5)
plot(fit.3, which = 6)
?plot.lm
plot(x = resid.2, y = art.data$y, ylab = "Y values", xlab = "Residuals")
plot(y = resid.2, x = art.data$y, ylab = "Y values", xlab = "Residuals")
plot(y = resid.2, x = art.data$y, ylab = "Y values", xlab = "Residuals")
plot(y = resid.2, x = art.data$y, ylab = "Residuals", xlab = "Y-Values")
plot(y = resid.2, x = art.data$y, ylab = "Residuals", xlab = "Y-Values")
abline(0,0)
plot(fit, which = 1)
plot(fit.3, which = 2)
plot(fit.3, which = 1)
plot(art.data.2)
plot(fit.3, which = 1)
plot(fit.3, which = 2)
qqplot(art.data.2)
?qqplot
qqplot(x = x, y = y, data = art.data.2)
qqplot(x = art.data.2$x, y = art.data.2$y)
qqplot(art.data.2$y)
art.data.2 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
fit.3 <- lm(y~x, data = art.data.2)
plot(art.data.2)
plot(fit.3, which = 1)
plot(fit.3, which = 1) #
ypred <- pred(fit.3)
ypred <- predict(fit.3)
red.art.data <- art.data.2[-2,]
View(red.art.data)
qqplot(art.data.2$y)
qqplot(art.data.2)
?rt
qqpnorm(art.data.2$y)
qqnorm(art.data.2$y)
library(car)
leveneTest(art.data.2$y)
?leveneTest
leveneTest(y~x, data = art.data.2)
levene.test(y~x, data = art.data.2)
leveneTest(y~x, data = art.data.2)
leveneTest(y~x, data = fit.3)
leveneTest(lm(y~x, data = art.data.2))
leveneTest(y ~ x, data = art.data.2)
leveneTest(y, data = art.data.2)
leveneTest(y = y, data = art.data.2)
leveneTest(art.data.2$y)
red.fit <- lm(y~x, data = red.art.data)
red.pred <- predict(red.fit)
pred.3 <- predict(fit.3)
outlierTest(fit.3)
rm(list = ls())
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
#a Linearity
fit.3 <- lm(y~x, data = art.data.3)
plot(art.data.3)
plot(fit.3, which = 1)
#b Equal Variance
plot(fit.3, which = 1)
#c Normality
qqnorm(art.data.3$y)
plot(fit.3, which = 2)
#d
red.art.data <- art.data.3[-2,]
red.fit <- lm(y~x, data = red.art.data)
red.pred <- predict(red.fit)
pred.3 <- predict(fit.3)
outlierTest(fit.3)
plot(art.data.3, title(main = "Scatterplot"))
plot(art.data.3, title = "Scatterplot")
?plot
?se
60.075 + (1.728*23)
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
View(art.data.3)
?predict
red.art.data <- art.data.3[-2,]
red.fit <- lm(y~x, data = red.art.data)
red fit
red.fit
summary(red.fit)
red.fit$fitted.values[2]
red.fit$model
coef(red.art.data)
coef(red.fit)
summary(red.fit)
red.fit
-7.47 + (.95*3)
ypred <- -7.47 + (.95*3)
art.data <- data.frame(x = 1:9,
y = c(-2.08, -.72, .28, .92, 1.20, 1.12, .68, -.12, -1.28))
sum((x - mean(x))*(y - mean(y)))
View(art.data)
sum((x - mean(x))*(y - mean(y))), data = art.data)
sum((art.data$x - mean(art.data$x))*(art.data$y - mean(art.data$y)))
sum((art.data$x - mean(art.data$x))^2)
mean(art.data$y)
mean(art.data$x)
fit <- lm(y~x, data = art.data)
resid.2 <- resid(fit)
plot(y = resid.2, x = art.data$y, ylab = "Residuals", xlab = "Y-Values")
plot(fit, which = 1)
plot(y = resid.2, x = art.data$y, ylab = "Residuals", xlab = "Y-Values")
abline(0,0)
plot(y = resid.2, x = art.data$y, ylab = "Residuals", xlab = "Y-Values")
abline(h = 0, lty = 2)
plot(y = resid.2, x = art.data$x, ylab = "X values", xlab = "Residuals")
abline(h = 0, lty = 2)
plot(fit, which = 1)
plot(y = resid.2, x = art.data$x, ylab = "Residuals", xlab = "X-Values")
abline(h = 0, lty = 2)
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
fit.3 <- lm(y~x, data = art.data.3)
plot(art.data.3)
plot(fit.3, which = 1)
qqnorm(art.data.3$y)
plot(fit.3, which = 2)
rm(list = ls())
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
red.art.data <- art.data.3[-2,]
red.fit <- lm(y~x, data = red.art.data)
sum((red.art.data$x - mean(red.art.data$x))*(red.art.data$y - mean(red.art.data$y)))
sum((red.art.data$x - mean(red.art.data$x))^2)
mean(red.art.data$y)
mean(red.art.data$x)
?ss
red.fit
View(art.data.3)
plot(red.fit)
predict(red.fit)
View(red.art.data)
anova(red.fit)
View(art.data.3)
11-3
library(car)
outlierTest(fit.3)
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
#a Linearity
fit.3 <- lm(y~x, data = art.data.3)
outlierTest(fit.3)
plot(fit.3)
plot(fit.3, which = 4)
plot(fit.3, which = 5)
pred.3 <- predict(fit.3)
red.pred.3 <- predict(red.fit)
cbind(art.data.3, pred.3, red.pred.3)
pred.3 <- predict(fit.3)
red.pred.3 <- predict(red.fit, data.frame(x = art.data.3$x)
dsa
pred.3 <- predict(fit.3)
red.pred.3 <- predict(red.fit, data.frame(x = art.data.3$x))
cbind(art.data.3, pred.3, red.pred.3)
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
#a Linearity
fit.3 <- lm(y~x, data = art.data.3)
anova(fit.3)
red.art.data <- art.data.3[-2,]
red.fit <- lm(y~x, data = red.art.data)
pred.3 <- predict(fit.3)
red.pred.3 <- predict(red.fit, data.frame(x = art.data.3$x))
cbind(art.data.3, pred.3, red.pred.3)
sum((pred.3 - red.pred.3)^2) / (2 * 8.348) #8.348 is MSE from anova(fit.3)
.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 1
red.art.data <- art.data.3[-2,]
art.data.3 <- data.frame(x = c(10, 3, 12, 9, 13, 11),
y = c(2.1, 11.3, 4.0, 1.1, 4.9, 2.8))
red.art.data <- art.data.3[-2,]
pred.3 <- predict(fit.3)
fit.3 <- lm(y~x, data = art.data.3)
pred.3 <- predict(fit.3)
red.fit <- lm(y~x, data = red.art.data)
red.pred.3 <- predict(red.fit, data.frame(x = art.data.3$x))
cbind(art.data.3, pred.3, red.pred.3)
sum((pred.3 - red.pred.3)^2)
sum((pred.3 - red.pred.3)^2) / (2 * 8.348) #8.348 is MSE from anova(fit.3)
View(art.data.3)
fit.no2 <- lm(y~x, data = art.data.3[-7,])
fit.no2
red.fit
fit.no2 <- lm(y~x, data = art.data.3[-2,])
fit.no2
pred3.no2 <- predict(fit.no2)
cbind(art.data.3, pred.3, pred3.no2)
cbind(art.data.3, pred.3, pred3.no2)
red.pred.3
View(red.art.data)
red.fit <- lm(y~x, data = red.art.data)
summary(red.fit)
predict(red.fit)
pred3.no2 <- predict(fit.no2, data.frame(x = art.data.3$x))
pred3.no2
fit.3
predict(red.fit, data.frame(x = art.data.3$x))
predict(red.fit)
pred.3
sum((pred.3 - pred.3.no2)^2) / (2 * 8.348)
sum((pred.3 - pred3.no2)^2) / (2 * 8.348)
anova(fit.3)
pho = data.frame(
x = c( 1,  4,  5,  9, 13, 11, 23, 23,  28),
y = c(64, 71, 54, 81, 93, 76, 77, 95, 109)
)
fit <- lm(y~x, data = pho)
fit.no7 <- lm(y~x, data = pho[-7,])
ypred <- predict(fit)
ypred.no7 <- predict(fit.no7, data.frame(x=pho$x))
cbind(pho, ypred, ypred.no7)
ypred
ypred.no7
predict(fit.no7)
(1/5) +
d
plot(fit.3, which = 4)
plot(fit.3, which = 5)
(1/6) * ((3 - mean(art.data.3$x))/sum((red.art.data$x - mean(red.art.data$x))^2))
(1/6) * ((3 - mean(art.data.3$x))/sum((art.data$x - mean(art.data$x))^2))
(1/6) * ((3 - mean(art.data.3$x))/sum((art.data.3$x - mean(art.data.3$x))^2))
mean(art.data.3)
mean(art.data.3$x)
v <- c(5,4,13,12,24,26,14,6,3,6,2,28,18,2,26,20,18,22,5,14,4,26,3,19,12,0,9,6,26,25)
length(v)
seq(from = 0, to = 30, by = 2)
even <- seq(from = 0, to = 30, by = 2)
sum(v[even])
v[v.2]
v.2 <-c(10,5,8,0,1,17,1,8,9,5,7,26,22,5,22)
v[v.2]
c(2, 7)
1:3 %in% c(2, 7)
v.2 %in% v
v %in% v.2
v[(v %in% v.2)]
v[(v.2 %in% v)]
v.2 %in% v
sum(v[(v.2 %in% v)])
v <- c(18,4,4,29,24,12,23,5,26,0,22,25,17,18,28,0,0,28,28,24,2,24,10,26,21,28,6,18,16,1)
length(v)
even <- seq(from = 0, to = 30, by = 2)
sum(v[even])
v.2 <- c(21,9,24,1,3,10,24,27,3,25,0,7,0,28,29)
sum(v[(v.2 %in% v)])
v[(v.2 %in% v)]
which(v.2 %in% v)
v[(v %in% v.2)]
sum(v[(v %in% v.2)])
sort.v <- order(v)
sort.v
v[sort.v]
v[sort.v[1:3]]
sum(v[sort.v[1:3]])
?order
sort(v)
sort(v, c(1:3))
?sort
sort(v, partial = "1:3")
sort(v, partial)
sort(v, partial(1:3))
sort(v, partial = NULL)
sort(v, partial = c(1, 2, 3))
sort.v
sum(sort.v[1:3)]
sum(sort.v[1:3])
sum(sort.v[1:3)]
sum(sort.v[1:3])
10+16+17
?quintile
?quartile
?quantile
quantile(v)
quantile(v, seq(0, 1, 1/5))
quantile(v, seq(0, 1, 1/4))
quantile(v)
quantile(v, seq(0, 1, 1/5))
quint.v <- quantile(v, seq(0, 1, 1/5))
quint.v
sum(quint.v)
4+16.6+22.4+26+29
small = 100
setwd("~/Git/STAT327/hw2")
rm(list = ls()) # Remove all objects defined in workspace.
wi <- scan("WI_donations.txt", numeric())
ny <- scan("NY_donations.txt", numeric())
WI.sum = sum(wi) # ... set this variable correctly
NY.sum = sum(ny) # ... set this variable correctly
cat(sep="", "WI sum=", WI.sum, "\n")
cat(sep="", "NY sum=", NY.sum, "\n")
small = 100
WI.sum.small = sum() # ... set this variable correctly
wi[wi<sum]
wi[wi<small]
which(wi<small)
wi.small <- which(wi<small)
sum(wi[wi.small])
sum(wi[wi < smalll])
sum(wi[wi < small])
sum(wi[small > wi])
ny.small <- which(ny<small)
sum(ny.small)
sum(ny[ny.small])
wi < 100
wi > -100
wi > -100 | wi < 100
wi > -100 & wi < 100
WI.sum.small = sum(wi[wi < small & wi > -small]) # ... set this variable correctly
wi[wi < small & wi > -small]
sum(w[wi > -100 & wi < 100])
sum(wi[wi > -100 & wi < 100])
sum(wi[wi > -100 | wi < 100])
wi[-100 < wi < 100]
wi[-100 < wi & wi < 100]
sum(wi[-100 < wi & wi < 100])
sum(wi[wi < small & wi > -small])
rm(list = ls()) # Remove all objects defined in workspace.
wi <- scan("WI_donations.txt", numeric())
ny <- scan("NY_donations.txt", numeric())
WI.sum = sum(wi) # ... set this variable correctly
NY.sum = sum(ny) # ... set this variable correctly
cat(sep="", "WI sum=", WI.sum, "\n")
cat(sep="", "NY sum=", NY.sum, "\n")
small = 100
WI.sum.small = sum(wi[wi < small & wi > -small]) # ... set this variable correctly
NY.sum.small = sum(ny[ny < small & ny > -small]) # ... set this variable correctly
cat(sep="", "WI.sum.small=", WI.sum.small, "\n")
cat(sep="", "NY.sum.small=", NY.sum.small, "\n")
WI.sum.big = sum(wi[wi > small & wi < -small]) # ... set this variable correctly
NY.sum.big = sum(ny[ny > small & ny < -small]) # ... set this variable correctly
cat(sep="", "WI.sum.big=", WI.sum.big, "\n")
cat(sep="", "NY.sum.big=", NY.sum.big, "\n")
wi > 100
WI.sum.big = sum(wi[wi > small | wi < -small]) # ... set this variable correctly
NY.sum.big = sum(ny[ny > small | ny < -small]) # ... set this variable correctly
cat(sep="", "WI.sum.big=", WI.sum.big, "\n")
cat(sep="", "NY.sum.big=", NY.sum.big, "\n")
WI.small.ratio = WI.sum.small/WI.sum # ... set this variable correctly
NY.small.ratio = NY.sum.small/NY.sum # ... set this variable correctly
cat(sep="", "WI.small.ratio=", WI.small.ratio, "\n")
cat(sep="", "NY.small.ratio=", NY.small.ratio, "\n")
WI.mean.pos = mean(wi[wi > 0]) # ... set this variable correctly
mean(wi[wi > 0])
WI.mean.pos = mean(wi[wi > 0]) # ... set this variable correctly
mean(wi[wi > 0])
mean(ny[ny > 0])
WI.mean.pos = mean(wi[wi > 0]) # ... set this variable correctly
NY.mean.pos = mean(ny[ny > 0]) # ... set this variable correctly
cat(sep="", "WI.mean.pos=", WI.mean.pos, "\n")
cat(sep="", "NY.mean.pos=", NY.mean.pos, "\n")
WI.median.pos = median(wi[wi > 0]) # ... set this variable correctly
NY.median.pos = median(ny[ny > 0]) # ... set this variable correctly
cat(sep="", "WI.median.pos=", WI.median.pos, "\n")
cat(sep="", "NY.median.pos=", NY.median.pos, "\n")
which(wi>0)
wi.0 <- which(wi > 0)
wi.mean <- wi[wi.0]
mean(wi.mean)
median(wi.mean)
# zero or negative donations.)
WI.mean.pos = mean(wi[wi > 0]) # ... set this variable correctly
NY.mean.pos = mean(ny[ny > 0]) # ... set this variable correctly
cat(sep="", "WI.mean.pos=", WI.mean.pos, "\n")
cat(sep="", "NY.mean.pos=", NY.mean.pos, "\n")
# Find the median positive donation from each state. (Do not include
# zero or negative donations.)
WI.median.pos = median(wi[wi > 0]) # ... set this variable correctly
NY.median.pos = median(ny[ny > 0]) # ... set this variable correctly
cat(sep="", "WI.median.pos=", WI.median.pos, "\n")
cat(sep="", "NY.median.pos=", NY.median.pos, "\n")
order(wi)
sort(wi)
?increasing
?sort
sort(wi, decreasing = FALSE)
sort(wi)
sort(wi, decreasing = FALSE)
order(wi, decreasing = TRUE)
order(wi)
rank(wi)
?rank
sort(wi, decreasing = FALSE)
sort(wi, decreasing = TRUE)
order(wi, decreasing = TRUE)
wi[order(wi), 2]
wi[order(wi); 2]
wi[order(wi)]
wi[order(wi, decreasing = TRUE)]
wi.order <- order(wi, decreasing = TRUE)
ny.order <- order(ny, decreasing = TRUE)
wi.order[2]
wi[wi.order[2]]
sort(wi, decreasing = TRUE)
wi[wi.order[1]]
max(wi)
?max
WI.largest=max(wi), WI.second.largest=wi[wi.order[2]]
NY.largest=max(ny), NY.second.largest=ny[ny.order[2]]
rm(list = ls()) # Remove all objects defined in workspace.
wi <- scan("WI_donations.txt", numeric())
ny <- scan("NY_donations.txt", numeric())
WI.sum = sum(wi) # ... set this variable correctly
NY.sum = sum(ny) # ... set this variable correctly
cat(sep="", "WI sum=", WI.sum, "\n")
cat(sep="", "NY sum=", NY.sum, "\n")
small = 100
WI.sum.small = sum(wi[wi <= small & wi >= -small]) # ... set this variable correctly
NY.sum.small = sum(ny[ny <= small & ny >= -small]) # ... set this variable correctly
cat(sep="", "WI.sum.small=", WI.sum.small, "\n")
cat(sep="", "NY.sum.small=", NY.sum.small, "\n")
WI.sum.big = sum(wi[wi > small | wi < -small]) # ... set this variable correctly
NY.sum.big = sum(ny[ny > small | ny < -small]) # ... set this variable correctly
cat(sep="", "WI.sum.big=", WI.sum.big, "\n")
cat(sep="", "NY.sum.big=", NY.sum.big, "\n")
WI.small.ratio = WI.sum.small/WI.sum # ... set this variable correctly
NY.small.ratio = NY.sum.small/NY.sum # ... set this variable correctly
cat(sep="", "WI.small.ratio=", WI.small.ratio, "\n")
cat(sep="", "NY.small.ratio=", NY.small.ratio, "\n")
WI.mean.pos = mean(wi[wi > 0]) # ... set this variable correctly
NY.mean.pos = mean(ny[ny > 0]) # ... set this variable correctly
cat(sep="", "WI.mean.pos=", WI.mean.pos, "\n")
cat(sep="", "NY.mean.pos=", NY.mean.pos, "\n")
WI.median.pos = median(wi[wi > 0]) # ... set this variable correctly
NY.median.pos = median(ny[ny > 0]) # ... set this variable correctly
cat(sep="", "WI.median.pos=", WI.median.pos, "\n")
cat(sep="", "NY.median.pos=", NY.median.pos, "\n")
wi.order <- order(wi, decreasing = TRUE)
ny.order <- order(ny, decreasing = TRUE)
200
50
500
-50
5
wi.tiny <- scan("WI_tiny", character())
wi.tiny <- scan("WI_tiny.txt", character())
wi.tiny
?cat
?sep
cat(sep="", "WI.largest=", WI.largest, "\n")
wi.order <- order(wi, decreasing = TRUE)
ny.order <- order(ny, decreasing = TRUE)
WI.largest = max(wi)
WI.second.largest = wi[wi.order[2]]
NY.largest = max(ny)
NY.second.largest = ny[ny.order[2]]
cat(sep="", "WI.largest=", WI.largest, "\n")
text = paste(sep="", "Tree names include \"oak.\"\nOak weighs ", oak, " lbs/ft^3.\n")
oak <- 70
text = paste(sep="", "Tree names include \"oak.\"\nOak weighs ", oak, " lbs/ft^3.\n")
text
"f"
cat(sep="", "WI.largest=", WI.largest)
cat(sep = "", "WI.second.largest=", WI.second.largest, "\n")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest", WI.second.largest, "\n")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n")
cat(sep="", "NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest, "\n")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest)
cat(sep="", "NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest, "\n")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n", "Test")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest)
cat(sep="", "NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "/n",
"NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "/n"
"NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "/n",
"NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "/n", "NY.largest=", NY.largest, ", NY.second.largest =" , NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n", "Test")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n", "NY.largest=")
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n", "NY.largest=", NY.largest, "NY.second.largest", NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n", "NY.largest=", NY.largest, ", NY.second.largest", NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n",
"NY.largest=", NY.largest, ", NY.second.largest", NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest =" , WI.second.largest, "\n",
"NY.largest=", NY.largest, ", NY.second.largest=", NY.second.largest)
cat(sep="", "WI.largest=", WI.largest, ", WI.second.largest=" , WI.second.largest, "\n",
"NY.largest=", NY.largest, ", NY.second.largest=", NY.second.largest)
rm(list=ls())
source("hw2.r")
